{"ast":null,"code":"var _jsxFileName = \"/home/nenwam/Documents/rallyessentials/cost_calculator/quickstart-react/src/App.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport mondaySdk from \"monday-sdk-js\";\nimport \"monday-ui-react-core/dist/main.css\";\n//Explore more Monday React Components here: https://style.monday.com/\nimport AttentionBox from \"monday-ui-react-core/dist/AttentionBox.js\";\nimport axios from \"axios\";\n\n// Usage of mondaySDK example, for more information visit here: https://developer.monday.com/apps/docs/introduction-to-the-sdk/\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst monday = mondaySdk();\nconst App = () => {\n  _s();\n  const [context, setContext] = useState();\n  const [vinyls, setVinyls] = useState([]);\n  const [jobCost, setJobCost] = useState(null);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        // First API call to list vinyls\n        const vinylResponse = await fetch('https://api.stickermania818.com/listvinyls');\n        if (!vinylResponse.ok) {\n          throw new Error(`Error: ${vinylResponse.statusText}`);\n        }\n        const vinylsData = await vinylResponse.json();\n        console.log('vinylsData:', vinylsData);\n        setVinyls(vinylsData);\n\n        // Second API call to get job cost\n        const jobCostResponse = await fetch('https://api.stickermania818.com/jobcost?vinylType=MATTE6MIL&width=4&height=5&count=100&includeColor=true&colorPercent=100&colorPasses=1&includeWhite=true&whitePercent=100&whitePasses=1&includeGloss=true&glossPercent=100&glossPasses=1&targetCostPerPrint=1.50&bSalesTax=true&bSalesCommission=true');\n        if (!jobCostResponse.ok) {\n          throw new Error(`Error: ${jobCostResponse.statusText}`);\n        }\n        const jobCostData = await jobCostResponse.json();\n        console.log('jobCostData:', jobCostData);\n        setJobCost(jobCostData);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n    fetchData();\n  }, []);\n  useEffect(() => {\n    // Notice this method notifies the monday platform that user gains a first value in an app.\n    // Read more about it here: https://developer.monday.com/apps/docs/mondayexecute#value-created-for-user/\n    monday.execute(\"valueCreatedForUser\");\n\n    // TODO: set up event listeners, Here`s an example, read more here: https://developer.monday.com/apps/docs/mondaylisten/\n    monday.listen(\"context\", res => {\n      setContext(res.data);\n    });\n  }, []);\n\n  //Some example what you can do with context, read more here: https://developer.monday.com/apps/docs/mondayget#requesting-context-and-settings-data\n  const attentionBoxText = `Hello, your user_id is: ${context ? context.user.id : \"still loading\"}.\n  Let's start building your amazing app, which will change the world!`;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(AttentionBox, {\n      title: \"Hello Monday Apps!\",\n      text: 'Vinyl: ' + vinyls[0] + ' Job Cost: ' + jobCost,\n      type: \"success\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"/8PcCrjoU5n0vaT+V9kBGI7UEk8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","mondaySdk","AttentionBox","axios","jsxDEV","_jsxDEV","monday","App","_s","context","setContext","vinyls","setVinyls","jobCost","setJobCost","fetchData","vinylResponse","fetch","ok","Error","statusText","vinylsData","json","console","log","jobCostResponse","jobCostData","error","execute","listen","res","data","attentionBoxText","user","id","className","children","title","text","type","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/nenwam/Documents/rallyessentials/cost_calculator/quickstart-react/src/App.js"],"sourcesContent":["import React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport mondaySdk from \"monday-sdk-js\";\nimport \"monday-ui-react-core/dist/main.css\";\n//Explore more Monday React Components here: https://style.monday.com/\nimport AttentionBox from \"monday-ui-react-core/dist/AttentionBox.js\";\nimport axios from \"axios\";\n\n// Usage of mondaySDK example, for more information visit here: https://developer.monday.com/apps/docs/introduction-to-the-sdk/\nconst monday = mondaySdk();\n\nconst App = () => {\n  const [context, setContext] = useState();\n  const [vinyls, setVinyls] = useState([]);\n  const [jobCost, setJobCost] = useState(null);\n\n    useEffect(() => {\n        const fetchData = async () => {\n            try {\n                // First API call to list vinyls\n                const vinylResponse = await fetch('https://api.stickermania818.com/listvinyls');\n                if (!vinylResponse.ok) {\n                    throw new Error(`Error: ${vinylResponse.statusText}`);\n                }\n                const vinylsData = await vinylResponse.json();\n                console.log('vinylsData:', vinylsData)\n                setVinyls(vinylsData);\n\n                // Second API call to get job cost\n                const jobCostResponse = await fetch('https://api.stickermania818.com/jobcost?vinylType=MATTE6MIL&width=4&height=5&count=100&includeColor=true&colorPercent=100&colorPasses=1&includeWhite=true&whitePercent=100&whitePasses=1&includeGloss=true&glossPercent=100&glossPasses=1&targetCostPerPrint=1.50&bSalesTax=true&bSalesCommission=true');\n                if (!jobCostResponse.ok) {\n                    throw new Error(`Error: ${jobCostResponse.statusText}`);\n                }\n                const jobCostData = await jobCostResponse.json();\n                console.log('jobCostData:', jobCostData)\n                setJobCost(jobCostData);\n            } catch (error) {\n                console.error('Error fetching data:', error);\n            }\n        };\n\n        fetchData();\n    }, []);\n\n\n\n  useEffect(() => {\n    // Notice this method notifies the monday platform that user gains a first value in an app.\n    // Read more about it here: https://developer.monday.com/apps/docs/mondayexecute#value-created-for-user/\n    monday.execute(\"valueCreatedForUser\");\n\n    // TODO: set up event listeners, Here`s an example, read more here: https://developer.monday.com/apps/docs/mondaylisten/\n    monday.listen(\"context\", (res) => {\n      setContext(res.data);\n    });\n  }, []);\n\n  //Some example what you can do with context, read more here: https://developer.monday.com/apps/docs/mondayget#requesting-context-and-settings-data\n  const attentionBoxText = `Hello, your user_id is: ${\n    context ? context.user.id : \"still loading\"\n  }.\n  Let's start building your amazing app, which will change the world!`;\n\n  return (\n    <div className=\"App\">\n      <AttentionBox\n        title=\"Hello Monday Apps!\"\n        text={'Vinyl: ' + vinyls[0] + ' Job Cost: ' + jobCost}\n        type=\"success\"\n      />\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}