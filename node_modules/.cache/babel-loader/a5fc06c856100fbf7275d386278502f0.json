{"ast":null,"code":"var _jsxFileName = \"/home/nenwam/Documents/rallyessentials/cost_calculator/quickstart-react/src/App.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport mondaySdk from \"monday-sdk-js\";\nimport \"monday-ui-react-core/dist/main.css\";\n//Explore more Monday React Components here: https://style.monday.com/\nimport AttentionBox from \"monday-ui-react-core/dist/AttentionBox.js\";\nimport { TextField, Button, Label, Dropdown, Loader, Divider, ExpandCollapse } from \"monday-ui-react-core\";\nimport axios from \"axios\";\n\n// Usage of mondaySDK example, for more information visit here: https://developer.monday.com/apps/docs/introduction-to-the-sdk/\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst monday = mondaySdk();\nconst storageInstance = monday.storage.instance;\nconst App = () => {\n  _s();\n  const [context, setContext] = useState();\n  const [vinyls, setVinyls] = useState([]);\n  const [jobCost, setJobCost] = useState(null);\n  const [colOptions, setColOptions] = useState([]);\n  const [apiParams, setApiParams] = useState({\n    vinylType: '',\n    width: 0.0,\n    height: 0.0,\n    count: 0,\n    includeColor: false,\n    colorPercent: 0.0,\n    colorPasses: 0,\n    includeWhite: false,\n    whitePercent: 0.0,\n    whitePasses: 0,\n    includeGloss: false,\n    glossPercent: 0.0,\n    glossPasses: 0,\n    targetCostPerPrint: 0.0,\n    bSalesTax: false,\n    bSalesCommission: false\n  });\n  const [selectedVinyl, setSelectedVinyl] = useState('');\n  const corsProxy = 'https://cors-anywhere.herokuapp.com/';\n\n  // Conversions\n  /*\n    Input:\n    vinylType: CUSTOM\n    width: Dimensions\n    height: Dimensions\n    count: Count\n    includeColor: Print Settings\n    colorPercent: Color Percent (NEW)\n    colorPasses: Color Passes (NEW)\n    includeWhite: Print Settings\n    whitePercent: White Percent (NEW)\n    whitePasses: White Passes (NEW)\n    includeGloss: Print Settings\n    glossPercent: Gloss Percent (NEW)\n    glossPasses: Gloss Passes (NEW)\n    targetCostPerPrint: Target Cost (NEW) \n    bSalesTax: Sales Tax\n    bSalesCommission: Sales Commission (NEW)\n     Output:\n    COGS: costOfGoodsPerPrintJob\n    Per Item Sale: perPrintTotal\n    Total Sale: jobTotal\n  */\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const headers = {\n          // Uncomment or edit according to the header you need to set\n          // 'Origin': 'http://your-origin.com',\n          'X-Requested-With': 'XMLHttpRequest'\n          // Add other headers as needed\n        };\n\n        // First API call to list vinyls\n        const vinylUrl = `https://api.stickermania818.com/listvinyls`;\n        const vinylResponse = await fetch(vinylUrl, {\n          headers\n        });\n        if (!vinylResponse.ok) {\n          throw new Error(`Error: ${vinylResponse.statusText}`);\n        }\n        const vinylsData = await vinylResponse.json();\n        const filteredVinylData = vinylsData.map(item => {\n          return {\n            label: item,\n            value: item\n          };\n        });\n        console.log(\"Vinyls Data: \", filteredVinylData);\n        setVinyls(filteredVinylData);\n\n        // Second API call to get job cost\n        // const jobCostUrl = `${corsProxy}https://api.stickermania818.com/jobcost?vinylType=MATTE-6MIL&width=4&height=5&count=100&includeColor=true&colorPercent=100&colorPasses=1&includeWhite=true&whitePercent=100&whitePasses=1&includeGloss=true&glossPercent=100&glossPasses=1&targetCostPerPrint=1.50&bSalesTax=true&bSalesCommission=true`;\n        // const jobCostResponse = await fetch(jobCostUrl, {headers});\n        // if (!jobCostResponse.ok) {\n        //     throw new Error(`Error: ${jobCostResponse.statusText}`);\n        // }\n        // const jobCostData = await jobCostResponse.json();\n        // console.log(\"Job Cost Data: \", jobCostData)\n        // setJobCost(jobCostData);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n    fetchData();\n  }, []);\n  useEffect(() => {\n    // Notice this method notifies the monday platform that user gains a first value in an app.\n    // Read more about it here: https://developer.monday.com/apps/docs/mondayexecute#value-created-for-user/\n    monday.execute(\"valueCreatedForUser\");\n\n    // TODO: set up event listeners, Here`s an example, read more here: https://developer.monday.com/apps/docs/mondaylisten/\n    monday.listen(\"context\", res => {\n      setContext(res.data);\n      storageInstance.getItem('selectedVinyl_' + res.data.itemId).then(result1 => {\n        setSelectedVinyl(JSON.parse(result1.data.value) || []);\n      }).catch(error => {\n        console.log(\"Error fetching database: \", error);\n      });\n    });\n  }, []);\n  const obtainInputParams = extractedParams => {\n    const dimensions = extractedParams.filter(param => param.label === 'text')[0].value;\n    const regex = /\\d+/g;\n    const dimAsNums = dimensions.match(regex).map(Number);\n    const width = dimAsNums[0];\n    const height = dimAsNums[1];\n    const count = parseInt(extractedParams.filter(param => param.label === 'numbers')[0].value, 10);\n    const printSettings = extractedParams.filter(param => param.label === 'dropdown0')[0].value.split('-');\n    const includesWhite = printSettings.includes('WHITE') ? true : false;\n    const includesGloss = printSettings.includes('GLOSS') ? true : false;\n    const includesColor = printSettings.includes('CMYK') ? true : false;\n    const colorPercent = parseFloat(extractedParams.filter(param => param.label === 'numbers7')[0].value);\n    const colorPasses = parseInt(extractedParams.filter(param => param.label === 'numbers5')[0].value);\n    const whitePercent = parseFloat(extractedParams.filter(param => param.label === 'numbers1')[0].value);\n    const whitePasses = parseInt(extractedParams.filter(param => param.label === 'numbers14')[0].value);\n    const glossPercent = parseFloat(extractedParams.filter(param => param.label === 'numbers4')[0].value);\n    const glossPasses = parseInt(extractedParams.filter(param => param.label === 'numbers72')[0].value);\n    const targetCost = parseFloat(extractedParams.filter(param => param.label === 'numbers2')[0].value);\n    const tax = extractedParams.filter(param => param.label === 'status_11')[0].value === 'Yes' ? true : false;\n    const commission = extractedParams.filter(param => param.label === 'status_1')[0].value === 'Yes' ? true : false;\n    console.log(\"Print Settings: \", printSettings);\n    // const includeColor = extractedParams.filter(param => param.label === 'dropdown0')[0].value\n\n    const params = {\n      vinylType: selectedVinyl.value,\n      width: width,\n      height: height,\n      count: count,\n      includeColor: includesColor,\n      colorPercent: colorPercent,\n      colorPasses: colorPasses,\n      includeWhite: includesWhite,\n      whitePercent: whitePercent,\n      whitePasses: whitePasses,\n      includeGloss: includesGloss,\n      glossPercent: glossPercent,\n      glossPasses: glossPasses,\n      targetCostPerPrint: targetCost,\n      bSalesTax: tax,\n      bSalesCommission: commission\n    };\n    return params;\n  };\n  const getJobCost = async params => {\n    const jobCostData = null;\n    try {\n      const headers = {\n        // Uncomment or edit according to the header you need to set\n        // 'Origin': 'http://your-origin.com',\n        'X-Requested-With': 'XMLHttpRequest'\n        // Add other headers as needed\n      };\n\n      // Second API call to get job cost\n      const jobCostUrl = `${corsProxy}https://api.stickermania818.com/jobcost?vinylType=${params.vinylType}&width=${params.width}&height=${params.height}&count=${params.count}&includeColor=${params.includeColor}&colorPercent=${params.colorPercent}&colorPasses=${params.colorPasses}&includeWhite=${params.includeWhite}&whitePercent=${params.whitePercent}&whitePasses=${params.whitePasses}&includeGloss=${params.includeGloss}&glossPercent=${params.glossPercent}&glossPasses=${params.glossPasses}&targetCostPerPrint=${params.targetCostPerPrint}&bSalesTax=${params.bSalesTax}&bSalesCommission=${params.bSalesCommission}`;\n      const jobCostResponse = await fetch(jobCostUrl, {\n        headers\n      });\n      if (!jobCostResponse.ok) {\n        throw new Error(`Error: ${jobCostResponse.statusText}`);\n      }\n      const jobCostData = await jobCostResponse.json();\n      console.log(\"Job Cost Data: \", jobCostData);\n      setJobCost(jobCostData);\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    }\n    return jobCostData;\n  };\n\n  // Sales commission is double\n  // \n\n  const calculate = () => {\n    if (context) {\n      console.log(\"Parent Context 2\", context);\n      console.log(\"Context: \", context);\n      const boardId = context.boardId;\n      const itemId = context.itemId;\n      console.log(\"using boardID: \", context.boardId);\n      const query = `query {\n        items(ids: ${itemId}) {\n          name\n          column_values {\n            id\n            text\n            value\n          }\n        }\n      }`;\n      monday.api(query).then(res => {\n        console.log(\"ListInput res: \", res);\n        const columns = res.data.items[0].column_values;\n        console.log(\"Columns: \", columns);\n        const filter = ['text'];\n        const cols = columns.map(column => {\n          return {\n            label: column.id,\n            value: column.text\n          };\n        });\n        console.log(\"Cols: \", cols);\n        const apiParams = obtainInputParams(cols);\n        getJobCost(apiParams);\n        console.log(\"API Params: \", apiParams);\n      }).catch(err => {\n        console.log(\"Error fetching columns: \", err);\n      }).finally(() => {\n        // setShouldLoad(false)\n      });\n    }\n  };\n  const handleVinylSelection = evt => {\n    setSelectedVinyl(evt);\n  };\n  useEffect(() => {\n    if (context) {\n      const query = `\n        mutation {\n          change_multiple_column_values(item_id: ${context.itemId}, board_id: ${context.boardId}, column_values: \"{\\\\\"numbers34\\\\\": \\\\\"${jobCost.costOfGoodsPerPrintJob}\\\\\", \\\\\"numbers3\\\\\": \\\\\"${jobCost.perPrintTotal}\\\\\", \\\\\"numbers38\\\\\": \\\\\"${jobCost.jobTotal}\\\\\"}\") {\n            id\n            column_values {\n              id\n              value\n            }\n          }\n        }`;\n      monday.api(query).then(res => {\n        console.log(\"Update res: \", res);\n      }).catch(err => {\n        console.log(\"Error updating columns: \", err);\n      });\n    }\n    console.log(\"Job Cost: \", jobCost);\n  }, [jobCost]);\n\n  // Update selectedVinyl in the board storage when it changes\n  useEffect(() => {\n    if (context) {\n      console.log(\"Context: \", context);\n      storageInstance.setItem('selectedVinyl_' + context.itemId, JSON.stringify(selectedVinyl)).catch(error => {\n        console.log(error);\n      });\n      console.log(\"Vinyl: \", selectedVinyl.value);\n    }\n  }, [selectedVinyl]);\n\n  // useEffect(() => {\n\n  // }, [context])\n\n  //Some example what you can do with context, read more here: https://developer.monday.com/apps/docs/mondayget#requesting-context-and-settings-data\n  const attentionBoxText = `Hello, your user_id is: ${context ? context.user.id : \"still loading\"}.\n  Let's start building your amazing app, which will change the world!`;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container h-50\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row mx-auto align-items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-6\",\n          children: /*#__PURE__*/_jsxDEV(Dropdown, {\n            placeholder: \"Select Vinyl\",\n            options: vinyls,\n            onChange: evt => handleVinylSelection(evt),\n            value: selectedVinyl\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-6\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            onClick: calculate,\n            children: \"Calculate\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 302,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row pt-3 mx-auto align-items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col\",\n              children: /*#__PURE__*/_jsxDEV(Label, {\n                text: \"Cost of Goods Sold:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 309,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 308,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col\",\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                value: jobCost ? jobCost.costOfGoodsPerPrintJob : ''\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 312,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 311,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row pt-1\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col\",\n              children: /*#__PURE__*/_jsxDEV(Label, {\n                text: \"Per Item Sale:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 317,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 316,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col\",\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                value: jobCost ? jobCost.perPrintTotal : ''\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 320,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 319,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 315,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row pt-1\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col\",\n              children: /*#__PURE__*/_jsxDEV(Label, {\n                text: \"Total Sale:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 325,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 324,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col\",\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                value: jobCost ? jobCost.jobTotal : ''\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 328,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 327,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 323,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 289,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"LVLIK0vBu++SeJ9EtdvcCPRqlCw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","mondaySdk","AttentionBox","TextField","Button","Label","Dropdown","Loader","Divider","ExpandCollapse","axios","jsxDEV","_jsxDEV","monday","storageInstance","storage","instance","App","_s","context","setContext","vinyls","setVinyls","jobCost","setJobCost","colOptions","setColOptions","apiParams","setApiParams","vinylType","width","height","count","includeColor","colorPercent","colorPasses","includeWhite","whitePercent","whitePasses","includeGloss","glossPercent","glossPasses","targetCostPerPrint","bSalesTax","bSalesCommission","selectedVinyl","setSelectedVinyl","corsProxy","fetchData","headers","vinylUrl","vinylResponse","fetch","ok","Error","statusText","vinylsData","json","filteredVinylData","map","item","label","value","console","log","error","execute","listen","res","data","getItem","itemId","then","result1","JSON","parse","catch","obtainInputParams","extractedParams","dimensions","filter","param","regex","dimAsNums","match","Number","parseInt","printSettings","split","includesWhite","includes","includesGloss","includesColor","parseFloat","targetCost","tax","commission","params","getJobCost","jobCostData","jobCostUrl","jobCostResponse","calculate","boardId","query","api","columns","items","column_values","cols","column","id","text","err","finally","handleVinylSelection","evt","costOfGoodsPerPrintJob","perPrintTotal","jobTotal","setItem","stringify","attentionBoxText","user","className","children","placeholder","options","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/home/nenwam/Documents/rallyessentials/cost_calculator/quickstart-react/src/App.js"],"sourcesContent":["import React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport mondaySdk from \"monday-sdk-js\";\nimport \"monday-ui-react-core/dist/main.css\";\n//Explore more Monday React Components here: https://style.monday.com/\nimport AttentionBox from \"monday-ui-react-core/dist/AttentionBox.js\";\nimport { TextField, Button, Label, Dropdown, Loader, Divider, ExpandCollapse } from \"monday-ui-react-core\"\nimport axios from \"axios\";\n\n// Usage of mondaySDK example, for more information visit here: https://developer.monday.com/apps/docs/introduction-to-the-sdk/\nconst monday = mondaySdk();\nconst storageInstance = monday.storage.instance;\n\nconst App = () => {\n  const [context, setContext] = useState();\n  const [vinyls, setVinyls] = useState([]);\n  const [jobCost, setJobCost] = useState(null);\n  const [colOptions, setColOptions] = useState([]);\n  const [apiParams, setApiParams] = useState({vinylType: '', width: 0.0, height: 0.0, count: 0, includeColor: false, colorPercent: 0.0, \n                                            colorPasses: 0, includeWhite: false, whitePercent: 0.0, whitePasses: 0, includeGloss: false, \n                                            glossPercent: 0.0, glossPasses: 0, targetCostPerPrint: 0.0, bSalesTax: false, bSalesCommission: false})\n  const [selectedVinyl, setSelectedVinyl] = useState('')\n  const corsProxy = 'https://cors-anywhere.herokuapp.com/';\n\n  // Conversions\n  /*\n    Input:\n    vinylType: CUSTOM\n    width: Dimensions\n    height: Dimensions\n    count: Count\n    includeColor: Print Settings\n    colorPercent: Color Percent (NEW)\n    colorPasses: Color Passes (NEW)\n    includeWhite: Print Settings\n    whitePercent: White Percent (NEW)\n    whitePasses: White Passes (NEW)\n    includeGloss: Print Settings\n    glossPercent: Gloss Percent (NEW)\n    glossPasses: Gloss Passes (NEW)\n    targetCostPerPrint: Target Cost (NEW) \n    bSalesTax: Sales Tax\n    bSalesCommission: Sales Commission (NEW)\n\n    Output:\n    COGS: costOfGoodsPerPrintJob\n    Per Item Sale: perPrintTotal\n    Total Sale: jobTotal\n  */\n\n  useEffect(() => {\n      const fetchData = async () => {\n          try {\n\n            const headers = {\n              // Uncomment or edit according to the header you need to set\n              // 'Origin': 'http://your-origin.com',\n              'X-Requested-With': 'XMLHttpRequest',\n              // Add other headers as needed\n            };\n\n              // First API call to list vinyls\n              const vinylUrl = `https://api.stickermania818.com/listvinyls`;\n              const vinylResponse = await fetch(vinylUrl, {headers});\n              if (!vinylResponse.ok) {\n                  throw new Error(`Error: ${vinylResponse.statusText}`);\n              }\n              const vinylsData = await vinylResponse.json();\n              const filteredVinylData = vinylsData\n                .map(item => {\n                    return {label: item, value: item}\n                })\n              console.log(\"Vinyls Data: \", filteredVinylData)\n              setVinyls(filteredVinylData);\n\n              // Second API call to get job cost\n              // const jobCostUrl = `${corsProxy}https://api.stickermania818.com/jobcost?vinylType=MATTE-6MIL&width=4&height=5&count=100&includeColor=true&colorPercent=100&colorPasses=1&includeWhite=true&whitePercent=100&whitePasses=1&includeGloss=true&glossPercent=100&glossPasses=1&targetCostPerPrint=1.50&bSalesTax=true&bSalesCommission=true`;\n              // const jobCostResponse = await fetch(jobCostUrl, {headers});\n              // if (!jobCostResponse.ok) {\n              //     throw new Error(`Error: ${jobCostResponse.statusText}`);\n              // }\n              // const jobCostData = await jobCostResponse.json();\n              // console.log(\"Job Cost Data: \", jobCostData)\n              // setJobCost(jobCostData);\n          } catch (error) {\n              console.error('Error fetching data:', error);\n          }\n      };\n\n      fetchData();\n  }, []);\n\n\n  \n\n\n  useEffect(() => {\n    // Notice this method notifies the monday platform that user gains a first value in an app.\n    // Read more about it here: https://developer.monday.com/apps/docs/mondayexecute#value-created-for-user/\n    monday.execute(\"valueCreatedForUser\");\n\n    // TODO: set up event listeners, Here`s an example, read more here: https://developer.monday.com/apps/docs/mondaylisten/\n    monday.listen(\"context\", (res) => {\n      setContext(res.data);\n\n      storageInstance.getItem('selectedVinyl_' + res.data.itemId).then(result1 => {\n        setSelectedVinyl(JSON.parse(result1.data.value) || []);  \n      }).catch(error => {\n        console.log(\"Error fetching database: \", error)\n      })\n    });\n\n    \n  }, []);\n\n  const obtainInputParams = (extractedParams) => {\n    const dimensions = extractedParams.filter(param => param.label === 'text')[0].value\n    const regex = /\\d+/g;\n    const dimAsNums = dimensions.match(regex).map(Number);\n\n    const width = dimAsNums[0]\n    const height = dimAsNums[1]\n    const count = parseInt(extractedParams.filter(param => param.label === 'numbers')[0].value, 10)\n\n    const printSettings = (extractedParams.filter(param => param.label === 'dropdown0')[0].value).split('-')\n    const includesWhite = printSettings.includes('WHITE') ? true : false\n    const includesGloss = printSettings.includes('GLOSS') ? true : false\n    const includesColor = printSettings.includes('CMYK') ? true : false\n\n    const colorPercent = parseFloat(extractedParams.filter(param => param.label === 'numbers7')[0].value)\n    const colorPasses = parseInt(extractedParams.filter(param => param.label === 'numbers5')[0].value)\n    const whitePercent = parseFloat(extractedParams.filter(param => param.label === 'numbers1')[0].value)\n    const whitePasses = parseInt(extractedParams.filter(param => param.label === 'numbers14')[0].value)\n    const glossPercent = parseFloat(extractedParams.filter(param => param.label === 'numbers4')[0].value)\n    const glossPasses = parseInt(extractedParams.filter(param => param.label === 'numbers72')[0].value)\n\n    const targetCost = parseFloat(extractedParams.filter(param => param.label === 'numbers2')[0].value)\n    const tax = extractedParams.filter(param => param.label === 'status_11')[0].value === 'Yes' ? true : false\n    const commission = extractedParams.filter(param => param.label === 'status_1')[0].value === 'Yes' ? true : false\n\n    console.log(\"Print Settings: \", printSettings)\n    // const includeColor = extractedParams.filter(param => param.label === 'dropdown0')[0].value\n\n    \n\n    const params = {\n      vinylType: selectedVinyl.value,\n      width: width,\n      height: height,\n      count: count,\n      includeColor: includesColor,\n      colorPercent: colorPercent,\n      colorPasses: colorPasses,\n      includeWhite: includesWhite,\n      whitePercent: whitePercent,\n      whitePasses: whitePasses,\n      includeGloss: includesGloss,\n      glossPercent: glossPercent,\n      glossPasses: glossPasses,\n      targetCostPerPrint: targetCost,\n      bSalesTax: tax,\n      bSalesCommission: commission\n    }\n    \n    return params\n  }\n\n  const getJobCost = async (params) => {\n    const jobCostData = null\n    try {\n\n      const headers = {\n        // Uncomment or edit according to the header you need to set\n        // 'Origin': 'http://your-origin.com',\n        'X-Requested-With': 'XMLHttpRequest',\n        // Add other headers as needed\n      };\n\n        // Second API call to get job cost\n        const jobCostUrl = `${corsProxy}https://api.stickermania818.com/jobcost?vinylType=${params.vinylType}&width=${params.width}&height=${params.height}&count=${params.count}&includeColor=${params.includeColor}&colorPercent=${params.colorPercent}&colorPasses=${params.colorPasses}&includeWhite=${params.includeWhite}&whitePercent=${params.whitePercent}&whitePasses=${params.whitePasses}&includeGloss=${params.includeGloss}&glossPercent=${params.glossPercent}&glossPasses=${params.glossPasses}&targetCostPerPrint=${params.targetCostPerPrint}&bSalesTax=${params.bSalesTax}&bSalesCommission=${params.bSalesCommission}`;\n        const jobCostResponse = await fetch(jobCostUrl, {headers});\n        if (!jobCostResponse.ok) {\n            throw new Error(`Error: ${jobCostResponse.statusText}`);\n        }\n        const jobCostData = await jobCostResponse.json();\n        console.log(\"Job Cost Data: \", jobCostData)\n        setJobCost(jobCostData);\n    } catch (error) {\n        console.error('Error fetching data:', error);\n    }\n\n    return jobCostData\n  }\n\n  // Sales commission is double\n  // \n\n  const calculate = () => {\n    if (context) {\n      console.log(\"Parent Context 2\", context)\n\n      console.log(\"Context: \", context)\n      const boardId = context.boardId;\n      const itemId = context.itemId;\n      console.log(\"using boardID: \", context.boardId)\n      \n      const query = `query {\n        items(ids: ${itemId}) {\n          name\n          column_values {\n            id\n            text\n            value\n          }\n        }\n      }`;\n      monday.api(query).then((res) => {\n          console.log(\"ListInput res: \", res);\n          const columns = res.data.items[0].column_values;\n          console.log(\"Columns: \", columns);\n          const filter = ['text', ]\n          const cols = columns.map(column => {                      \n              return {label: column.id, value: column.text}\n          })\n          console.log(\"Cols: \", cols)\n          const apiParams = obtainInputParams(cols)\n          getJobCost(apiParams)\n          console.log(\"API Params: \", apiParams)\n      }).catch((err) => {\n          console.log(\"Error fetching columns: \", err);\n      }).finally(() => {\n          // setShouldLoad(false)\n      });\n    }\n  }\n\n  const handleVinylSelection = (evt) => {\n    setSelectedVinyl(evt) \n  }\n\n  useEffect(() => {\n    if (context) {\n      const query = `\n        mutation {\n          change_multiple_column_values(item_id: ${context.itemId}, board_id: ${context.boardId}, column_values: \"{\\\\\"numbers34\\\\\": \\\\\"${jobCost.costOfGoodsPerPrintJob}\\\\\", \\\\\"numbers3\\\\\": \\\\\"${jobCost.perPrintTotal}\\\\\", \\\\\"numbers38\\\\\": \\\\\"${jobCost.jobTotal}\\\\\"}\") {\n            id\n            column_values {\n              id\n              value\n            }\n          }\n        }`\n        \n      monday.api(query).then((res) => {\n        console.log(\"Update res: \", res)\n      }).catch((err) => {\n        console.log(\"Error updating columns: \", err);\n      })\n    }\n    console.log(\"Job Cost: \", jobCost)\n  }, [jobCost])\n\n  // Update selectedVinyl in the board storage when it changes\n  useEffect(() => {\n    if (context) {\n      console.log(\"Context: \", context)\n      storageInstance.setItem('selectedVinyl_' + context.itemId, JSON.stringify(selectedVinyl)\n      ).catch(error => { \n        console.log(error)\n      });\n      console.log(\"Vinyl: \", selectedVinyl.value)\n    }\n    \n    \n  }, [selectedVinyl]);\n\n  // useEffect(() => {\n    \n  // }, [context])\n\n  //Some example what you can do with context, read more here: https://developer.monday.com/apps/docs/mondayget#requesting-context-and-settings-data\n  const attentionBoxText = `Hello, your user_id is: ${\n    context ? context.user.id : \"still loading\"\n  }.\n  Let's start building your amazing app, which will change the world!`;\n\n  return (\n    <div className=\"App\">\n      <div className=\"container h-50\">\n        <div className=\"row mx-auto align-items-center\">\n          <div className=\"col-6\">\n            <Dropdown\n              placeholder=\"Select Vinyl\"\n              options={vinyls}\n              onChange={evt => handleVinylSelection(evt)}\n              value={selectedVinyl}\n            >\n            </Dropdown>\n          </div>\n          <div className=\"col-6\">\n            <Button onClick={calculate}>Calculate</Button>\n          </div>\n        </div>\n        <div className=\"row pt-3 mx-auto align-items-center\">\n          <div className=\"col\">\n            <div className=\"row\">\n              <div className=\"col\">\n                <Label text=\"Cost of Goods Sold:\" />\n              </div>\n              <div className=\"col\">\n                <TextField value={jobCost ? jobCost.costOfGoodsPerPrintJob : ''} />\n              </div>\n            </div>\n            <div className=\"row pt-1\">\n              <div className=\"col\">\n                <Label text=\"Per Item Sale:\" />\n              </div>\n              <div className=\"col\">\n                <TextField value={jobCost ? jobCost.perPrintTotal : ''} />\n              </div>\n            </div>\n            <div className=\"row pt-1\">\n              <div className=\"col\">\n                <Label text=\"Total Sale:\" />\n              </div>\n              <div className=\"col\">\n                <TextField value={jobCost ? jobCost.jobTotal : ''} />\n              </div>\n            </div>\n          </div>\n          <div className=\"col\">\n            \n          </div>\n        </div>\n      </div>\n      \n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}