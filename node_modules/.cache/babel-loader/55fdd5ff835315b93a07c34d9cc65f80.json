{"ast":null,"code":"import React from\"react\";import{useState,useEffect}from\"react\";import\"./App.css\";import mondaySdk from\"monday-sdk-js\";import\"monday-ui-react-core/dist/main.css\";//Explore more Monday React Components here: https://style.monday.com/\nimport AttentionBox from\"monday-ui-react-core/dist/AttentionBox.js\";import{TextField,Button,Label,Dropdown,Loader,Divider,ExpandCollapse}from\"monday-ui-react-core\";import axios from\"axios\";// Usage of mondaySDK example, for more information visit here: https://developer.monday.com/apps/docs/introduction-to-the-sdk/\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const monday=mondaySdk();const storageInstance=monday.storage.instance;const App=()=>{const[context,setContext]=useState();const[vinyls,setVinyls]=useState([]);const[jobCost,setJobCost]=useState(null);const[colOptions,setColOptions]=useState([]);const[apiParams,setApiParams]=useState({vinylType:'',width:0.0,height:0.0,count:0,includeColor:false,colorPercent:0.0,colorPasses:0,includeWhite:false,whitePercent:0.0,whitePasses:0,includeGloss:false,glossPercent:0.0,glossPasses:0,targetCostPerPrint:0.0,bSalesTax:false,bSalesCommission:false});const[selectedVinyl,setSelectedVinyl]=useState('');const corsProxy='https://cors-anywhere.herokuapp.com/';// Conversions\n/*\n    Input:\n    vinylType: CUSTOM\n    width: Dimensions\n    height: Dimensions\n    count: Count\n    includeColor: Print Settings\n    colorPercent: Color Percent (NEW)\n    colorPasses: Color Passes (NEW)\n    includeWhite: Print Settings\n    whitePercent: White Percent (NEW)\n    whitePasses: White Passes (NEW)\n    includeGloss: Print Settings\n    glossPercent: Gloss Percent (NEW)\n    glossPasses: Gloss Passes (NEW)\n    targetCostPerPrint: Target Cost (NEW) \n    bSalesTax: Sales Tax\n    bSalesCommission: Sales Commission (NEW)\n\n    Output:\n    COGS: costOfGoodsPerPrintJob\n    Per Item Sale: perPrintTotal\n    Total Sale: jobTotal\n  */useEffect(()=>{const fetchData=async()=>{try{const headers={// Uncomment or edit according to the header you need to set\n// 'Origin': 'http://your-origin.com',\n'X-Requested-With':'XMLHttpRequest','Content-Type':'application/json'// Add other headers as needed\n};// First API call to list vinyls\nconst vinylUrl=\"\".concat(corsProxy,\"https://api.stickermania818.com/listvinyls\");const vinylResponse=await fetch(vinylUrl,{headers});if(!vinylResponse.ok){throw new Error(\"Error: \".concat(vinylResponse.statusText));}const vinylsData=await vinylResponse.json();const filteredVinylData=vinylsData.map(item=>{return{label:item,value:item};});console.log(\"Vinyls Data: \",filteredVinylData);setVinyls(filteredVinylData);// Second API call to get job cost\n// const jobCostUrl = `${corsProxy}https://api.stickermania818.com/jobcost?vinylType=MATTE-6MIL&width=4&height=5&count=100&includeColor=true&colorPercent=100&colorPasses=1&includeWhite=true&whitePercent=100&whitePasses=1&includeGloss=true&glossPercent=100&glossPasses=1&targetCostPerPrint=1.50&bSalesTax=true&bSalesCommission=true`;\n// const jobCostResponse = await fetch(jobCostUrl, {headers});\n// if (!jobCostResponse.ok) {\n//     throw new Error(`Error: ${jobCostResponse.statusText}`);\n// }\n// const jobCostData = await jobCostResponse.json();\n// console.log(\"Job Cost Data: \", jobCostData)\n// setJobCost(jobCostData);\n}catch(error){console.error('Error fetching data:',error);}};fetchData();},[]);useEffect(()=>{// Notice this method notifies the monday platform that user gains a first value in an app.\n// Read more about it here: https://developer.monday.com/apps/docs/mondayexecute#value-created-for-user/\nmonday.execute(\"valueCreatedForUser\");// TODO: set up event listeners, Here`s an example, read more here: https://developer.monday.com/apps/docs/mondaylisten/\nmonday.listen(\"context\",res=>{setContext(res.data);storageInstance.getItem('selectedVinyl_'+res.data.itemId).then(result1=>{setSelectedVinyl(JSON.parse(result1.data.value)||[]);}).catch(error=>{console.log(\"Error fetching database: \",error);});});},[]);const obtainInputParams=extractedParams=>{const dimensions=extractedParams.filter(param=>param.label==='text')[0].value;const regex=/\\d+/g;const dimAsNums=dimensions.match(regex).map(Number);const width=dimAsNums[0];const height=dimAsNums[1];const count=parseInt(extractedParams.filter(param=>param.label==='numbers')[0].value,10);const printSettings=extractedParams.filter(param=>param.label==='dropdown0')[0].value.split('-');const includesWhite=printSettings.includes('WHITE')?true:false;const includesGloss=printSettings.includes('GLOSS')?true:false;const includesColor=printSettings.includes('CMYK')?true:false;const colorPercent=parseFloat(extractedParams.filter(param=>param.label==='numbers7')[0].value);const colorPasses=parseInt(extractedParams.filter(param=>param.label==='numbers5')[0].value);const whitePercent=parseFloat(extractedParams.filter(param=>param.label==='numbers1')[0].value);const whitePasses=parseInt(extractedParams.filter(param=>param.label==='numbers14')[0].value);const glossPercent=parseFloat(extractedParams.filter(param=>param.label==='numbers4')[0].value);const glossPasses=parseInt(extractedParams.filter(param=>param.label==='numbers72')[0].value);const targetCost=parseFloat(extractedParams.filter(param=>param.label==='numbers2')[0].value);const tax=extractedParams.filter(param=>param.label==='status_11')[0].value==='Yes'?true:false;const commission=extractedParams.filter(param=>param.label==='status_1')[0].value==='Yes'?true:false;console.log(\"Print Settings: \",printSettings);// const includeColor = extractedParams.filter(param => param.label === 'dropdown0')[0].value\nconst params={vinylType:selectedVinyl.value,width:width,height:height,count:count,includeColor:includesColor,colorPercent:colorPercent,colorPasses:colorPasses,includeWhite:includesWhite,whitePercent:whitePercent,whitePasses:whitePasses,includeGloss:includesGloss,glossPercent:glossPercent,glossPasses:glossPasses,targetCostPerPrint:targetCost,bSalesTax:tax,bSalesCommission:commission};return params;};const getJobCost=async params=>{const jobCostData=null;try{const headers={// Uncomment or edit according to the header you need to set\n// 'Origin': 'http://your-origin.com',\n'X-Requested-With':'XMLHttpRequest'// Add other headers as needed\n};// Second API call to get job cost\nconst jobCostUrl=\"\".concat(corsProxy,\"https://api.stickermania818.com/jobcost?vinylType=\").concat(params.vinylType,\"&width=\").concat(params.width,\"&height=\").concat(params.height,\"&count=\").concat(params.count,\"&includeColor=\").concat(params.includeColor,\"&colorPercent=\").concat(params.colorPercent,\"&colorPasses=\").concat(params.colorPasses,\"&includeWhite=\").concat(params.includeWhite,\"&whitePercent=\").concat(params.whitePercent,\"&whitePasses=\").concat(params.whitePasses,\"&includeGloss=\").concat(params.includeGloss,\"&glossPercent=\").concat(params.glossPercent,\"&glossPasses=\").concat(params.glossPasses,\"&targetCostPerPrint=\").concat(params.targetCostPerPrint,\"&bSalesTax=\").concat(params.bSalesTax,\"&bSalesCommission=\").concat(params.bSalesCommission);const jobCostResponse=await fetch(jobCostUrl,{headers});if(!jobCostResponse.ok){throw new Error(\"Error: \".concat(jobCostResponse.statusText));}const jobCostData=await jobCostResponse.json();console.log(\"Job Cost Data: \",jobCostData);setJobCost(jobCostData);}catch(error){console.error('Error fetching data:',error);}return jobCostData;};// Sales commission is double\n// \nconst calculate=()=>{if(context){console.log(\"Parent Context 2\",context);console.log(\"Context: \",context);const boardId=context.boardId;const itemId=context.itemId;console.log(\"using boardID: \",context.boardId);const query=\"query {\\n        items(ids: \".concat(itemId,\") {\\n          name\\n          column_values {\\n            id\\n            text\\n            value\\n          }\\n        }\\n      }\");monday.api(query).then(res=>{console.log(\"ListInput res: \",res);const columns=res.data.items[0].column_values;console.log(\"Columns: \",columns);const filter=['text'];const cols=columns.map(column=>{return{label:column.id,value:column.text};});console.log(\"Cols: \",cols);const apiParams=obtainInputParams(cols);getJobCost(apiParams);console.log(\"API Params: \",apiParams);}).catch(err=>{console.log(\"Error fetching columns: \",err);}).finally(()=>{// setShouldLoad(false)\n});}};const handleVinylSelection=evt=>{setSelectedVinyl(evt);};useEffect(()=>{if(context){const query=\"\\n        mutation {\\n          change_multiple_column_values(item_id: \".concat(context.itemId,\", board_id: \").concat(context.boardId,\", column_values: \\\"{\\\\\\\"numbers34\\\\\\\": \\\\\\\"\").concat(jobCost.costOfGoodsPerPrintJob,\"\\\\\\\", \\\\\\\"numbers3\\\\\\\": \\\\\\\"\").concat(jobCost.perPrintTotal,\"\\\\\\\", \\\\\\\"numbers38\\\\\\\": \\\\\\\"\").concat(jobCost.jobTotal,\"\\\\\\\"}\\\") {\\n            id\\n            column_values {\\n              id\\n              value\\n            }\\n          }\\n        }\");monday.api(query).then(res=>{console.log(\"Update res: \",res);}).catch(err=>{console.log(\"Error updating columns: \",err);});}console.log(\"Job Cost: \",jobCost);},[jobCost]);// Update selectedVinyl in the board storage when it changes\nuseEffect(()=>{if(context){console.log(\"Context: \",context);storageInstance.setItem('selectedVinyl_'+context.itemId,JSON.stringify(selectedVinyl)).catch(error=>{console.log(error);});console.log(\"Vinyl: \",selectedVinyl.value);}},[selectedVinyl]);// useEffect(() => {\n// }, [context])\n//Some example what you can do with context, read more here: https://developer.monday.com/apps/docs/mondayget#requesting-context-and-settings-data\nconst attentionBoxText=\"Hello, your user_id is: \".concat(context?context.user.id:\"still loading\",\".\\n  Let's start building your amazing app, which will change the world!\");return/*#__PURE__*/_jsx(\"div\",{className:\"App\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"container h-50\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"row mx-auto align-items-center\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"col-6\",children:/*#__PURE__*/_jsx(Dropdown,{placeholder:\"Select Vinyl\",options:vinyls,onChange:evt=>handleVinylSelection(evt),value:selectedVinyl})}),/*#__PURE__*/_jsx(\"div\",{className:\"col-6\",children:/*#__PURE__*/_jsx(Button,{onClick:calculate,children:\"Calculate\"})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"row pt-3 mx-auto align-items-center\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"col\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"row\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"col\",children:/*#__PURE__*/_jsx(Label,{text:\"Cost of Goods Sold:\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"col\",children:/*#__PURE__*/_jsx(TextField,{value:jobCost?jobCost.costOfGoodsPerPrintJob:''})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"row pt-1\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"col\",children:/*#__PURE__*/_jsx(Label,{text:\"Per Item Sale:\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"col\",children:/*#__PURE__*/_jsx(TextField,{value:jobCost?jobCost.perPrintTotal:''})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"row pt-1\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"col\",children:/*#__PURE__*/_jsx(Label,{text:\"Total Sale:\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"col\",children:/*#__PURE__*/_jsx(TextField,{value:jobCost?jobCost.jobTotal:''})})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"col\"})]})]})});};export default App;","map":{"version":3,"names":["React","useState","useEffect","mondaySdk","AttentionBox","TextField","Button","Label","Dropdown","Loader","Divider","ExpandCollapse","axios","jsx","_jsx","jsxs","_jsxs","monday","storageInstance","storage","instance","App","context","setContext","vinyls","setVinyls","jobCost","setJobCost","colOptions","setColOptions","apiParams","setApiParams","vinylType","width","height","count","includeColor","colorPercent","colorPasses","includeWhite","whitePercent","whitePasses","includeGloss","glossPercent","glossPasses","targetCostPerPrint","bSalesTax","bSalesCommission","selectedVinyl","setSelectedVinyl","corsProxy","fetchData","headers","vinylUrl","concat","vinylResponse","fetch","ok","Error","statusText","vinylsData","json","filteredVinylData","map","item","label","value","console","log","error","execute","listen","res","data","getItem","itemId","then","result1","JSON","parse","catch","obtainInputParams","extractedParams","dimensions","filter","param","regex","dimAsNums","match","Number","parseInt","printSettings","split","includesWhite","includes","includesGloss","includesColor","parseFloat","targetCost","tax","commission","params","getJobCost","jobCostData","jobCostUrl","jobCostResponse","calculate","boardId","query","api","columns","items","column_values","cols","column","id","text","err","finally","handleVinylSelection","evt","costOfGoodsPerPrintJob","perPrintTotal","jobTotal","setItem","stringify","attentionBoxText","user","className","children","placeholder","options","onChange","onClick"],"sources":["/home/nenwam/Documents/rallyessentials/cost_calculator/quickstart-react/src/App.js"],"sourcesContent":["import React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport mondaySdk from \"monday-sdk-js\";\nimport \"monday-ui-react-core/dist/main.css\";\n//Explore more Monday React Components here: https://style.monday.com/\nimport AttentionBox from \"monday-ui-react-core/dist/AttentionBox.js\";\nimport { TextField, Button, Label, Dropdown, Loader, Divider, ExpandCollapse } from \"monday-ui-react-core\"\nimport axios from \"axios\";\n\n// Usage of mondaySDK example, for more information visit here: https://developer.monday.com/apps/docs/introduction-to-the-sdk/\nconst monday = mondaySdk();\nconst storageInstance = monday.storage.instance;\n\nconst App = () => {\n  const [context, setContext] = useState();\n  const [vinyls, setVinyls] = useState([]);\n  const [jobCost, setJobCost] = useState(null);\n  const [colOptions, setColOptions] = useState([]);\n  const [apiParams, setApiParams] = useState({vinylType: '', width: 0.0, height: 0.0, count: 0, includeColor: false, colorPercent: 0.0, \n                                            colorPasses: 0, includeWhite: false, whitePercent: 0.0, whitePasses: 0, includeGloss: false, \n                                            glossPercent: 0.0, glossPasses: 0, targetCostPerPrint: 0.0, bSalesTax: false, bSalesCommission: false})\n  const [selectedVinyl, setSelectedVinyl] = useState('')\n  const corsProxy = 'https://cors-anywhere.herokuapp.com/';\n\n  // Conversions\n  /*\n    Input:\n    vinylType: CUSTOM\n    width: Dimensions\n    height: Dimensions\n    count: Count\n    includeColor: Print Settings\n    colorPercent: Color Percent (NEW)\n    colorPasses: Color Passes (NEW)\n    includeWhite: Print Settings\n    whitePercent: White Percent (NEW)\n    whitePasses: White Passes (NEW)\n    includeGloss: Print Settings\n    glossPercent: Gloss Percent (NEW)\n    glossPasses: Gloss Passes (NEW)\n    targetCostPerPrint: Target Cost (NEW) \n    bSalesTax: Sales Tax\n    bSalesCommission: Sales Commission (NEW)\n\n    Output:\n    COGS: costOfGoodsPerPrintJob\n    Per Item Sale: perPrintTotal\n    Total Sale: jobTotal\n  */\n\n  useEffect(() => {\n      const fetchData = async () => {\n          try {\n\n            const headers = {\n              // Uncomment or edit according to the header you need to set\n              // 'Origin': 'http://your-origin.com',\n              'X-Requested-With': 'XMLHttpRequest',\n              'Content-Type': 'application/json'\n              // Add other headers as needed\n            };\n\n              // First API call to list vinyls\n              const vinylUrl = `${corsProxy}https://api.stickermania818.com/listvinyls`;\n              const vinylResponse = await fetch(vinylUrl, {headers});\n              if (!vinylResponse.ok) {\n                  throw new Error(`Error: ${vinylResponse.statusText}`);\n              }\n              const vinylsData = await vinylResponse.json();\n              const filteredVinylData = vinylsData\n                .map(item => {\n                    return {label: item, value: item}\n                })\n              console.log(\"Vinyls Data: \", filteredVinylData)\n              setVinyls(filteredVinylData);\n\n              // Second API call to get job cost\n              // const jobCostUrl = `${corsProxy}https://api.stickermania818.com/jobcost?vinylType=MATTE-6MIL&width=4&height=5&count=100&includeColor=true&colorPercent=100&colorPasses=1&includeWhite=true&whitePercent=100&whitePasses=1&includeGloss=true&glossPercent=100&glossPasses=1&targetCostPerPrint=1.50&bSalesTax=true&bSalesCommission=true`;\n              // const jobCostResponse = await fetch(jobCostUrl, {headers});\n              // if (!jobCostResponse.ok) {\n              //     throw new Error(`Error: ${jobCostResponse.statusText}`);\n              // }\n              // const jobCostData = await jobCostResponse.json();\n              // console.log(\"Job Cost Data: \", jobCostData)\n              // setJobCost(jobCostData);\n          } catch (error) {\n              console.error('Error fetching data:', error);\n          }\n      };\n\n      fetchData();\n  }, []);\n\n\n  \n\n\n  useEffect(() => {\n    // Notice this method notifies the monday platform that user gains a first value in an app.\n    // Read more about it here: https://developer.monday.com/apps/docs/mondayexecute#value-created-for-user/\n    monday.execute(\"valueCreatedForUser\");\n\n    // TODO: set up event listeners, Here`s an example, read more here: https://developer.monday.com/apps/docs/mondaylisten/\n    monday.listen(\"context\", (res) => {\n      setContext(res.data);\n\n      storageInstance.getItem('selectedVinyl_' + res.data.itemId).then(result1 => {\n        setSelectedVinyl(JSON.parse(result1.data.value) || []);  \n      }).catch(error => {\n        console.log(\"Error fetching database: \", error)\n      })\n    });\n\n    \n  }, []);\n\n  const obtainInputParams = (extractedParams) => {\n    const dimensions = extractedParams.filter(param => param.label === 'text')[0].value\n    const regex = /\\d+/g;\n    const dimAsNums = dimensions.match(regex).map(Number);\n\n    const width = dimAsNums[0]\n    const height = dimAsNums[1]\n    const count = parseInt(extractedParams.filter(param => param.label === 'numbers')[0].value, 10)\n\n    const printSettings = (extractedParams.filter(param => param.label === 'dropdown0')[0].value).split('-')\n    const includesWhite = printSettings.includes('WHITE') ? true : false\n    const includesGloss = printSettings.includes('GLOSS') ? true : false\n    const includesColor = printSettings.includes('CMYK') ? true : false\n\n    const colorPercent = parseFloat(extractedParams.filter(param => param.label === 'numbers7')[0].value)\n    const colorPasses = parseInt(extractedParams.filter(param => param.label === 'numbers5')[0].value)\n    const whitePercent = parseFloat(extractedParams.filter(param => param.label === 'numbers1')[0].value)\n    const whitePasses = parseInt(extractedParams.filter(param => param.label === 'numbers14')[0].value)\n    const glossPercent = parseFloat(extractedParams.filter(param => param.label === 'numbers4')[0].value)\n    const glossPasses = parseInt(extractedParams.filter(param => param.label === 'numbers72')[0].value)\n\n    const targetCost = parseFloat(extractedParams.filter(param => param.label === 'numbers2')[0].value)\n    const tax = extractedParams.filter(param => param.label === 'status_11')[0].value === 'Yes' ? true : false\n    const commission = extractedParams.filter(param => param.label === 'status_1')[0].value === 'Yes' ? true : false\n\n    console.log(\"Print Settings: \", printSettings)\n    // const includeColor = extractedParams.filter(param => param.label === 'dropdown0')[0].value\n\n    \n\n    const params = {\n      vinylType: selectedVinyl.value,\n      width: width,\n      height: height,\n      count: count,\n      includeColor: includesColor,\n      colorPercent: colorPercent,\n      colorPasses: colorPasses,\n      includeWhite: includesWhite,\n      whitePercent: whitePercent,\n      whitePasses: whitePasses,\n      includeGloss: includesGloss,\n      glossPercent: glossPercent,\n      glossPasses: glossPasses,\n      targetCostPerPrint: targetCost,\n      bSalesTax: tax,\n      bSalesCommission: commission\n    }\n    \n    return params\n  }\n\n  const getJobCost = async (params) => {\n    const jobCostData = null\n    try {\n\n      const headers = {\n        // Uncomment or edit according to the header you need to set\n        // 'Origin': 'http://your-origin.com',\n        'X-Requested-With': 'XMLHttpRequest',\n        // Add other headers as needed\n      };\n\n        // Second API call to get job cost\n        const jobCostUrl = `${corsProxy}https://api.stickermania818.com/jobcost?vinylType=${params.vinylType}&width=${params.width}&height=${params.height}&count=${params.count}&includeColor=${params.includeColor}&colorPercent=${params.colorPercent}&colorPasses=${params.colorPasses}&includeWhite=${params.includeWhite}&whitePercent=${params.whitePercent}&whitePasses=${params.whitePasses}&includeGloss=${params.includeGloss}&glossPercent=${params.glossPercent}&glossPasses=${params.glossPasses}&targetCostPerPrint=${params.targetCostPerPrint}&bSalesTax=${params.bSalesTax}&bSalesCommission=${params.bSalesCommission}`;\n        const jobCostResponse = await fetch(jobCostUrl, {headers});\n        if (!jobCostResponse.ok) {\n            throw new Error(`Error: ${jobCostResponse.statusText}`);\n        }\n        const jobCostData = await jobCostResponse.json();\n        console.log(\"Job Cost Data: \", jobCostData)\n        setJobCost(jobCostData);\n    } catch (error) {\n        console.error('Error fetching data:', error);\n    }\n\n    return jobCostData\n  }\n\n  // Sales commission is double\n  // \n\n  const calculate = () => {\n    if (context) {\n      console.log(\"Parent Context 2\", context)\n\n      console.log(\"Context: \", context)\n      const boardId = context.boardId;\n      const itemId = context.itemId;\n      console.log(\"using boardID: \", context.boardId)\n      \n      const query = `query {\n        items(ids: ${itemId}) {\n          name\n          column_values {\n            id\n            text\n            value\n          }\n        }\n      }`;\n      monday.api(query).then((res) => {\n          console.log(\"ListInput res: \", res);\n          const columns = res.data.items[0].column_values;\n          console.log(\"Columns: \", columns);\n          const filter = ['text', ]\n          const cols = columns.map(column => {                      \n              return {label: column.id, value: column.text}\n          })\n          console.log(\"Cols: \", cols)\n          const apiParams = obtainInputParams(cols)\n          getJobCost(apiParams)\n          console.log(\"API Params: \", apiParams)\n      }).catch((err) => {\n          console.log(\"Error fetching columns: \", err);\n      }).finally(() => {\n          // setShouldLoad(false)\n      });\n    }\n  }\n\n  const handleVinylSelection = (evt) => {\n    setSelectedVinyl(evt) \n  }\n\n  useEffect(() => {\n    if (context) {\n      const query = `\n        mutation {\n          change_multiple_column_values(item_id: ${context.itemId}, board_id: ${context.boardId}, column_values: \"{\\\\\"numbers34\\\\\": \\\\\"${jobCost.costOfGoodsPerPrintJob}\\\\\", \\\\\"numbers3\\\\\": \\\\\"${jobCost.perPrintTotal}\\\\\", \\\\\"numbers38\\\\\": \\\\\"${jobCost.jobTotal}\\\\\"}\") {\n            id\n            column_values {\n              id\n              value\n            }\n          }\n        }`\n        \n      monday.api(query).then((res) => {\n        console.log(\"Update res: \", res)\n      }).catch((err) => {\n        console.log(\"Error updating columns: \", err);\n      })\n    }\n    console.log(\"Job Cost: \", jobCost)\n  }, [jobCost])\n\n  // Update selectedVinyl in the board storage when it changes\n  useEffect(() => {\n    if (context) {\n      console.log(\"Context: \", context)\n      storageInstance.setItem('selectedVinyl_' + context.itemId, JSON.stringify(selectedVinyl)\n      ).catch(error => { \n        console.log(error)\n      });\n      console.log(\"Vinyl: \", selectedVinyl.value)\n    }\n    \n    \n  }, [selectedVinyl]);\n\n  // useEffect(() => {\n    \n  // }, [context])\n\n  //Some example what you can do with context, read more here: https://developer.monday.com/apps/docs/mondayget#requesting-context-and-settings-data\n  const attentionBoxText = `Hello, your user_id is: ${\n    context ? context.user.id : \"still loading\"\n  }.\n  Let's start building your amazing app, which will change the world!`;\n\n  return (\n    <div className=\"App\">\n      <div className=\"container h-50\">\n        <div className=\"row mx-auto align-items-center\">\n          <div className=\"col-6\">\n            <Dropdown\n              placeholder=\"Select Vinyl\"\n              options={vinyls}\n              onChange={evt => handleVinylSelection(evt)}\n              value={selectedVinyl}\n            >\n            </Dropdown>\n          </div>\n          <div className=\"col-6\">\n            <Button onClick={calculate}>Calculate</Button>\n          </div>\n        </div>\n        <div className=\"row pt-3 mx-auto align-items-center\">\n          <div className=\"col\">\n            <div className=\"row\">\n              <div className=\"col\">\n                <Label text=\"Cost of Goods Sold:\" />\n              </div>\n              <div className=\"col\">\n                <TextField value={jobCost ? jobCost.costOfGoodsPerPrintJob : ''} />\n              </div>\n            </div>\n            <div className=\"row pt-1\">\n              <div className=\"col\">\n                <Label text=\"Per Item Sale:\" />\n              </div>\n              <div className=\"col\">\n                <TextField value={jobCost ? jobCost.perPrintTotal : ''} />\n              </div>\n            </div>\n            <div className=\"row pt-1\">\n              <div className=\"col\">\n                <Label text=\"Total Sale:\" />\n              </div>\n              <div className=\"col\">\n                <TextField value={jobCost ? jobCost.jobTotal : ''} />\n              </div>\n            </div>\n          </div>\n          <div className=\"col\">\n            \n          </div>\n        </div>\n      </div>\n      \n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}