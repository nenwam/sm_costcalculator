{"ast":null,"code":"import { canUseDOM as canUseDOMFlag } from 'exenv';\nexport var STATUS = {\n  IDLE: 'idle',\n  LOADING: 'loading',\n  LOADED: 'loaded',\n  FAILED: 'failed',\n  READY: 'ready',\n  UNSUPPORTED: 'unsupported'\n};\nexport function canUseDOM() {\n  return canUseDOMFlag;\n}\nexport function isSupportedEnvironment() {\n  return supportsInlineSVG() && typeof window !== 'undefined' && window !== null;\n}\nexport function supportsInlineSVG() {\n  /* istanbul ignore next */\n  if (!document) {\n    return false;\n  }\n  var div = document.createElement('div');\n  div.innerHTML = '<svg />';\n  var svg = div.firstChild;\n  return !!svg && svg.namespaceURI === 'http://www.w3.org/2000/svg';\n}\nfunction randomCharacter(character) {\n  return character[Math.floor(Math.random() * character.length)];\n}\nexport function randomString(length) {\n  var letters = 'abcdefghijklmnopqrstuvwxyz';\n  var numbers = '1234567890';\n  var charset = \"\".concat(letters).concat(letters.toUpperCase()).concat(numbers);\n  var R = '';\n  for (var index = 0; index < length; index++) {\n    R += randomCharacter(charset);\n  }\n  return R;\n}\n/**\n *  Remove properties from an object\n */\nexport function omit(input) {\n  var filter = [];\n  for (var _i = 1; _i < arguments.length; _i++) {\n    filter[_i - 1] = arguments[_i];\n  }\n  var output = {};\n  for (var key in input) {\n    /* istanbul ignore else */\n    if ({}.hasOwnProperty.call(input, key)) {\n      if (!filter.includes(key)) {\n        output[key] = input[key];\n      }\n    }\n  }\n  return output;\n}","map":{"version":3,"mappings":"AAAA,SAASA,SAAS,IAAIC,aAAa,QAAQ,OAAO;AAIlD,OAAO,IAAMC,MAAM,GAAG;EACpBC,IAAI,EAAE,MAAM;EACZC,OAAO,EAAE,SAAS;EAClBC,MAAM,EAAE,QAAQ;EAChBC,MAAM,EAAE,QAAQ;EAChBC,KAAK,EAAE,OAAO;EACdC,WAAW,EAAE;CACL;AAEV,OAAM,SAAUR,SAASA;EACvB,OAAOC,aAAa;AACtB;AAEA,OAAM,SAAUQ,sBAAsBA;EACpC,OAAOC,iBAAiB,EAAE,IAAI,OAAOC,MAAM,KAAK,WAAW,IAAIA,MAAM,KAAK,IAAI;AAChF;AAEA,OAAM,SAAUD,iBAAiBA;EAC/B;EACA,IAAI,CAACE,QAAQ,EAAE;IACb,OAAO,KAAK;;EAGd,IAAMC,GAAG,GAAGD,QAAQ,CAACE,aAAa,CAAC,KAAK,CAAC;EAEzCD,GAAG,CAACE,SAAS,GAAG,SAAS;EACzB,IAAMC,GAAG,GAAGH,GAAG,CAACI,UAA2B;EAE3C,OAAO,CAAC,CAACD,GAAG,IAAIA,GAAG,CAACE,YAAY,KAAK,4BAA4B;AACnE;AAEA,SAASC,eAAeA,CAACC,SAAiB;EACxC,OAAOA,SAAS,CAACC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAGH,SAAS,CAACI,MAAM,CAAC,CAAC;AAChE;AAEA,OAAM,SAAUC,YAAYA,CAACD,MAAc;EACzC,IAAME,OAAO,GAAG,4BAA4B;EAC5C,IAAMC,OAAO,GAAG,YAAY;EAC5B,IAAMC,OAAO,GAAG,UAAGF,OAAO,SAAGA,OAAO,CAACG,WAAW,EAAE,SAAGF,OAAO,CAAE;EAE9D,IAAIG,CAAC,GAAG,EAAE;EAEV,KAAK,IAAIC,KAAK,GAAG,CAAC,EAAEA,KAAK,GAAGP,MAAM,EAAEO,KAAK,EAAE,EAAE;IAC3CD,CAAC,IAAIX,eAAe,CAACS,OAAO,CAAC;;EAG/B,OAAOE,CAAC;AACV;AAEA;;;AAGA,OAAM,SAAUE,IAAIA,CAClBC,KAAQ;EACR;OAAA,UAAc,EAAdC,qBAAc,EAAdA,IAAc;IAAdC;;EAEA,IAAMC,MAAM,GAAQ,EAAE;EAEtB,KAAK,IAAMC,GAAG,IAAIJ,KAAK,EAAE;IACvB;IACA,IAAI,EAAE,CAACK,cAAc,CAACC,IAAI,CAACN,KAAK,EAAEI,GAAG,CAAC,EAAE;MACtC,IAAI,CAACF,MAAM,CAACK,QAAQ,CAACH,GAAmB,CAAC,EAAE;QACzCD,MAAM,CAACC,GAAG,CAAC,GAAGJ,KAAK,CAACI,GAAG,CAAC;;;;EAK9B,OAAOD,MAAoB;AAC7B","names":["canUseDOM","canUseDOMFlag","STATUS","IDLE","LOADING","LOADED","FAILED","READY","UNSUPPORTED","isSupportedEnvironment","supportsInlineSVG","window","document","div","createElement","innerHTML","svg","firstChild","namespaceURI","randomCharacter","character","Math","floor","random","length","randomString","letters","numbers","charset","toUpperCase","R","index","omit","input","_i","filter","output","key","hasOwnProperty","call","includes"],"sources":["/home/nenwam/Documents/rallyessentials/cost_calculator/quickstart-react/node_modules/react-inlinesvg/src/helpers.ts"],"sourcesContent":["import { canUseDOM as canUseDOMFlag } from 'exenv';\n\nimport type { PlainObject } from './types';\n\nexport const STATUS = {\n  IDLE: 'idle',\n  LOADING: 'loading',\n  LOADED: 'loaded',\n  FAILED: 'failed',\n  READY: 'ready',\n  UNSUPPORTED: 'unsupported',\n} as const;\n\nexport function canUseDOM(): boolean {\n  return canUseDOMFlag;\n}\n\nexport function isSupportedEnvironment(): boolean {\n  return supportsInlineSVG() && typeof window !== 'undefined' && window !== null;\n}\n\nexport function supportsInlineSVG(): boolean {\n  /* istanbul ignore next */\n  if (!document) {\n    return false;\n  }\n\n  const div = document.createElement('div');\n\n  div.innerHTML = '<svg />';\n  const svg = div.firstChild as SVGSVGElement;\n\n  return !!svg && svg.namespaceURI === 'http://www.w3.org/2000/svg';\n}\n\nfunction randomCharacter(character: string) {\n  return character[Math.floor(Math.random() * character.length)];\n}\n\nexport function randomString(length: number): string {\n  const letters = 'abcdefghijklmnopqrstuvwxyz';\n  const numbers = '1234567890';\n  const charset = `${letters}${letters.toUpperCase()}${numbers}`;\n\n  let R = '';\n\n  for (let index = 0; index < length; index++) {\n    R += randomCharacter(charset);\n  }\n\n  return R;\n}\n\n/**\n *  Remove properties from an object\n */\nexport function omit<T extends PlainObject, K extends keyof T>(\n  input: T,\n  ...filter: K[]\n): Omit<T, K> {\n  const output: any = {};\n\n  for (const key in input) {\n    /* istanbul ignore else */\n    if ({}.hasOwnProperty.call(input, key)) {\n      if (!filter.includes(key as unknown as K)) {\n        output[key] = input[key];\n      }\n    }\n  }\n\n  return output as Omit<T, K>;\n}\n"]},"metadata":{},"sourceType":"module"}